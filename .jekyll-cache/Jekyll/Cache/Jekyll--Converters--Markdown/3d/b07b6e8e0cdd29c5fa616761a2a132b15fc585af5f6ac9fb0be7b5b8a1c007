I"m<h1 id="类的属性">类的属性</h1>
<p>在UML类图中，类使用包含类名、属性(field) 和方法(method) 且带有分割线的矩形来表示，比如下图表示一个Employee类，它包含name,age和email这3个属性，以及modifyInfo()方法。</p>

<p><img src="http://images2015.cnblogs.com/blog/617148/201606/617148-20160612221055090-339746853.jpg" alt="类的属性" /></p>

<p>· 	+ ：表示public</p>

<p>· 	- ：表示private</p>

<p>· 	#：表示protected</p>

<p>实际上，属性的完整表示方式是这样的：</p>

<p>可见性  名称 ：类型 [ = 缺省值]</p>

<h1 id="类的方法的表示方式">类的方法的表示方式</h1>
<p>可见性  名称(参数列表) [ ： 返回类型]</p>

<p><img src="http://images2015.cnblogs.com/blog/617148/201606/617148-20160612222105058-2140837213.jpg" alt="类的方法" /></p>

<h1 id="uml中的关系">UML中的关系</h1>

<h2 id="依赖-dependency">依赖 Dependency</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>带箭头的虚线表示，箭头从使用类指向被依赖的类。
代码中一般指由局部变量、函数参数、返回值建立的对于其他对象的调用关系。
一个类调用被依赖类中的某些方法而得以完成这个类的一些职责。
</code></pre></div></div>

<p><img src="http://www.uml.org.cn/oobject/images/3c13e1c1.jpg" alt="依赖" /></p>

<p>虚线箭头</p>

<p>##关联 Association##</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>对象之间一种引用关系，比如客户类与订单类之间的关系。
这种关系通常使用类的属性表达。
关联又分为一般关联、聚合关联与组合关联。
后两种在后面分析。
在类图使用带箭头的实线表示，箭头从使用类指向被关联的类。可以是单向和双向。

实线箭头	 1. 单向关联
	
![单向关联](http://images2015.cnblogs.com/blog/617148/201606/617148-20160612224805636-1840590061.jpg) 2. 双向关联

![双向关联](http://images2015.cnblogs.com/blog/617148/201606/617148-20160612225006840-13774319.jpg)

双方各自持有对方类型的成员变量 3. 自关联

![聚合关系](http://images2015.cnblogs.com/blog/617148/201606/617148-20160612225421496-664373564.jpg)

自己包含自己 ##聚合 Aggregation##
</code></pre></div></div>

<p><img src="http://images2015.cnblogs.com/blog/617148/201606/617148-20160612225421496-664373564.jpg" alt="聚合关系" /></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>空心菱形和箭头表示
整体包含部分,部分可脱离整体单独存在
比如上图中汽车包含了发动机，而发动机脱离了汽车也能单独存在。 ## 合成 Composition
</code></pre></div></div>

<p><img src="http://images2015.cnblogs.com/blog/617148/201606/617148-20160612232819824-829657559.jpg" alt="合成关系" /></p>

<p>显然，嘴是头的一部分且不能脱离了头而单独存在。在UML类图中，组合关系用一个带实心菱形和箭头的直线表示。
##泛化 (继承) Generalization</p>

<p><img src="http://images2015.cnblogs.com/blog/617148/201606/617148-20160612233246199-1404301867.jpg" alt="泛化(继承)" /></p>

<p>##实现 Realization</p>

<p><img src="http://images2015.cnblogs.com/blog/617148/201606/617148-20160612233430777-736506858.jpg" alt="" /></p>

<p>虚线三角</p>

<h1 id="类图符号">类图符号</h1>

<h2 id="类">类</h2>

<p>长方形，由3部分组成，第一部分类名、第二部分属性、第三部分方法。</p>

<p><img src="http://www.uml.org.cn/oobject/images/image001.gif" alt="类" /></p>

<h2 id="包">包</h2>

<p><img src="http://www.uml.org.cn/oobject/images/image002.gif" alt="包" /></p>

<h2 id="接口">接口</h2>

<p>通常使用带有名称的小圆圈表示</p>

<p><img src="http://www.uml.org.cn/oobject/images/image003.gif" alt="接口" /></p>
:ET